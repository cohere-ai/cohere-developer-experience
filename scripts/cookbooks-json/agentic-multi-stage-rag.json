{
  "custompage": {
    "metadata": {
      "image": [],
      "title": "",
      "description": "",
      "keywords": ""
    },
    "algolia": {
      "recordCount": 17,
      "publishPending": false,
      "updatedAt": "2024-07-11T01:20:30.511Z"
    },
    "title": "Agentic Multi-Stage RAG with Cohere Tools API",
    "slug": "agentic-multi-stage-rag",
    "body": "[block:html]\n{\n  \"html\": \"<div class=\\\"cookbook-nav-container\\\">\\n  <a href=\\\"/page/cookbooks\\\" class=\\\"back-button pt-10 group inline-block cursor-pointer font-medium \\\" rel=\\\"noreferrer\\\"\\n    target=\\\"_self\\\">\\n    <div class=\\\"pr-1 inline-block group-hover:no-underline\\\">\\n      <svg width=\\\"11.8\\\" height=\\\"11\\\" viewBox=\\\"0 0 14 13\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path\\n          d=\\\"M1.1554 7.20808C1.35066 7.40335 1.66724 7.40335 1.8625 7.20808L7.18477 1.88582C7.38003 1.69055 7.38003 1.37397 7.18477 1.17871L6.83121 0.825157C6.63595 0.629895 6.31937 0.629896 6.12411 0.825157L0.801842 6.14742C0.60658 6.34269 0.60658 6.65927 0.801842 6.85453L1.1554 7.20808Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M1.1554 5.79226C1.35066 5.597 1.66724 5.597 1.8625 5.79226L7.18477 11.1145C7.38003 11.3098 7.38003 11.6264 7.18477 11.8216L6.83121 12.1752C6.63595 12.3705 6.31937 12.3705 6.12411 12.1752L0.801842 6.85292C0.60658 6.65766 0.60658 6.34108 0.801842 6.14582L1.1554 5.79226Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M2.52491 6.23674C2.52492 5.9606 2.74878 5.73675 3.02491 5.73675H6.28412C6.4513 5.73675 6.60742 5.8203 6.70015 5.95941L7.03347 6.45941C7.25499 6.79169 7.01679 7.23675 6.61745 7.23675H3.0249C2.74876 7.23675 2.5249 7.01289 2.5249 6.73674L2.52491 6.23674Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M13.5517 6.73676C13.5517 7.0129 13.3278 7.23675 13.0517 7.23675H8.79246C8.62528 7.23675 8.46916 7.1532 8.37643 7.0141L8.04311 6.5141C7.8216 6.18182 8.05979 5.73675 8.45914 5.73675H13.0517C13.3278 5.73675 13.5517 5.96062 13.5517 6.23676L13.5517 6.73676Z\\\"\\n          fill=\\\"currentColor\\\" />\\n      </svg>\\n    </div>\\n    Back to Cookbooks\\n  </a>\\n\\n  <a href=https://github.com/cohere-ai/cohere-developer-experience/blob/main/notebooks/agents/agentic-RAG/agentic_multi_stage_rag_native.ipynb class=\\\"github-button pt-10 group inline-block cursor-pointer font-medium \\\" rel=\\\"noreferrer\\\"\\n    target=\\\"_blank\\\">\\n    Open in GitHub\\n    <div class=\\\"pl-1 inline-block group-hover:no-underline\\\">\\n      <svg width=\\\"14\\\" height=\\\"10\\\" viewBox=\\\"0 0 14 10\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path\\n          d=\\\"M8.63218 0.366821C8.35604 0.366821 8.13218 0.590679 8.13218 0.866821V8.39364C8.13218 8.66978 8.35604 8.89364 8.63218 8.89364H9.13218C9.40832 8.89364 9.63218 8.66978 9.63218 8.39364V0.866821C9.63218 0.590678 9.40832 0.366821 9.13218 0.366821H8.63218Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M9.63332 1.36796C9.63332 1.6441 9.40946 1.86796 9.13332 1.86796H1.6065C1.33035 1.86796 1.1065 1.6441 1.1065 1.36796V0.867956C1.1065 0.591813 1.33035 0.367956 1.6065 0.367956H9.13332C9.40946 0.367956 9.63332 0.591813 9.63332 0.867956V1.36796Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M8.35063 2.02206C8.54588 2.21732 8.54588 2.5339 8.35062 2.72916L6.04601 5.03377C5.9278 5.15198 5.75833 5.20329 5.59439 5.1705L5.00515 5.05264C4.61356 4.97432 4.46728 4.49118 4.74966 4.2088L7.28997 1.66849C7.48523 1.47323 7.80182 1.47323 7.99708 1.6685L8.35063 2.02206Z\\\"\\n          fill=\\\"currentColor\\\" />\\n        <path\\n          d=\\\"M0.199967 9.46558C0.0047119 9.27032 0.0047151 8.95374 0.199974 8.75848L3.21169 5.74677C3.3299 5.62855 3.49938 5.57724 3.66331 5.61003L4.25256 5.72789C4.64414 5.80621 4.79042 6.28935 4.50804 6.57173L1.26063 9.81915C1.06536 10.0144 0.748774 10.0144 0.553513 9.81914L0.199967 9.46558Z\\\"\\n          fill=\\\"currentColor\\\" />\\n      </svg>\\n    </div>\\n  </a>\\n</div>\\n\\n<div>\\n  <h1>Agentic Multi-Stage RAG with Cohere Tools API</h1>\\n</div>\\n\\n<!-- Authors -->\\n<div class=\\\"authors-container\\\">\\n  \\n  <div class=\\\"author-container\\\">\\n    <img class=\\\"author-image\\\" src=\\\"https://files.readme.io/0803e3d-Jason_Jung.jpg\\\" alt=\\\"Jason Jung\\\" />\\n    <p class=\\\"author-name\\\">Jason Jung</p>\\n  </div>\\n  \\n</div>\\n\\n<style>\\n  .header {\\n    padding: 9px 0 17px 0;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  a[href],\\n  .field-description a:not([href=\\\"\\\"]),\\n  .markdown-body a[href],\\n  .markdown-body a:not([href=\\\"\\\"]) {\\n    text-decoration: none;\\n  }\\n\\n  #content {\\n    padding: 0 32px;\\n  }\\n\\n  #content-head {\\n    display: none;\\n  }\\n\\n  .guide-page-title {\\n    font-size: 29px !important;\\n  }\\n\\n  .back-button .github-button {\\n    border-radius: 0 !important;\\n    border-width: 0 !important;\\n    background-color: inherit !important;\\n  }\\n\\n  .cookbook-nav-container {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .authors-container {\\n    display: flex;\\n    flex-direction: row;\\n    flex-flow: row wrap;\\n    gap: 2px 14px;\\n    margin-top: 8px;\\n  }\\n\\n  .author-container {\\n    line-height: 1.5em;\\n    display: flex;\\n    flex-direction: row;\\n    vertical-align: middle;\\n    flex-shrink: 0;\\n  }\\n\\n  .author-image {\\n    height: 1.5em;\\n    margin: 0px 6px 6px 0px !important;\\n    border-radius: 50%;\\n  }\\n\\n  .author-name {\\n    white-space: nowrap;\\n    vertical-align: middle;\\n  }\\n\\n  @media only screen and (min-width: 620px) {\\n    .guide-page-title {\\n      width: 70%;\\n    }\\n\\n    .header {\\n      display: flex;\\n      flex-direction: row;\\n      align-items: center;\\n      justify-content: space-between;\\n      padding: 9px 0 17px 0;\\n    }\\n\\n    .git--button {\\n      width: 145px !important;\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: center;\\n      align-items: center;\\n      padding: 8px 16px;\\n\\n      width: 154px;\\n      height: 35px;\\n\\n      background: #D4D9D4;\\n      border: 1px solid #9DAAA4;\\n      border-radius: 6px;\\n    }\\n  }\\n\\n\\n  @media only screen and (min-width: 1024px) {\\n    .guide-page-title {\\n      font-size: 46px !important;\\n    }\\n\\n    .header {\\n      padding: 9px 0 32px 0;\\n    }\\n  }\\n</style>\"\n}\n[/block]\n\n\n## Motivation \n\nRetrieval augmented generation (RAG) has been a go-to use case that enterprises have been adopting with large language models (LLMs). Even though it works well in general, there are edge cases where this can fail. Most commonly, when the retrieved document mentions the query but actually refers to another document, the model will fail to generate the correct answer. \n\nWe propose an agentic RAG system that leverages tool use to continue to retrieve documents if correct ones were not retrieved at first try. This is ideal for use cases where accuracy is a top priority and latency is not. For example, lawyers trying to find the most accurate answer from their contracts are willing to wait a few more seconds to get the answer instead of getting wrong answers fast. \n\n\n## Objective\n\nThis notebook, we will explore how we can build a simple agentic RAG using Cohere's native API. We have prepared a fake dataset to demonstrate the use case. \nWe ask three questions that require different depths of retrieval. We will see how the model answers the question between simple and agentic RAG. \n\n\n## Disclaimer \n\nOne of the challenges in building a RAG system is that it has many moving pieces: vector database, type of embedding model, use of reranker, number of retrieved documents, chunking strategy, and more. These components can make debugging and evaluating RAG systems difficult. Since this notebook focuses on the concept of agentic RAG, it will simplify other parts of the RAG system. For example, we will only retrieve top 1 docuemnt to demonstrate what happens when retrieved document does not contain the answer needed. \n\n\n## Result \n\n|Type | Question | Simple Rag | Agentic Rag |  \n|---|--------------|---------|---------|\n|Single-stage retrieval|   Is there a state level law for wearing helmets?  | There is currently no state law requiring the use of helmets when riding a bicycle. However, some cities and counties do require helmet use. | There is currently no state law requiring helmet use. However, some cities and counties do require helmet use with bicycles. | \n|Multi-stage retrieval|I live in orting, do I need to wear a helmet with a bike?|In the state of Washington, there is no law requiring you to wear a helmet when riding a bike. However, some cities and counties do require helmet use, so it is worth checking your local laws.|Yes, you do need to wear a helmet with a bike in Orting if you are under 17.|\n\nAs you will see more below, the multi-stage retrieval is achieved by adding a new function `reference_extractor()` that extracts other references in the documents and updating the instruction so the agent continues to retrieve more documents.  \n\n\n\n\n```python\nimport os\nfrom pprint import pprint\n\nimport cohere\nimport pandas as pd\nfrom sklearn.metrics.pairwise import cosine_similarity\n```\n\n\n```python\n# versions\nprint('cohere version:', cohere.__version__)\n```\n\n    cohere version: 5.5.1\n\n\n## Setup \n\n\n```python\nCOHERE_API_KEY = os.environ.get(\"CO_API_KEY\")\nCOHERE_MODEL = 'command-r-plus'\nco = cohere.Client(api_key=COHERE_API_KEY)\n```\n\n## Data \n\nWe leveraged data from [Washington Department of Transportation](https://wsdot.wa.gov/travel/bicycling-walking/bicycling-washington/bicyclist-laws-safety) and modified to fit the need of this demo. \n\n\n```python\ndocuments = [\n    {\n        \"title\": \"Bicycle law\",\n        \"body\": \"\"\"\n        Traffic Infractions and fees - For all information related to bicycle traffic infractions such as not wearing a helmet and fee information, please visit Section 3b for more information.\n        Riding on the road - When riding on a roadway, a cyclist has all the rights and responsibilities of a vehicle driver (RCW 46.61.755). Bicyclists who violate traffic laws may be ticketed (RCW 46.61.750).\n        Roads closed to bicyclists - Some designated sections of the state's limited access highway system may be closed to bicyclists. See the permanent bike restrictions map for more information. In addition, local governments may adopt ordinances banning cycling on specific roads or on sidewalks within business districts.\n        Children bicycling - Parents or guardians may not knowingly permit bicycle traffic violations by their ward (RCW 46.61.700).\n        Riding side by side - Bicyclists may ride side by side, but not more than two abreast (RCW 46.61.770).\n        Riding at night - For night bicycle riding, a white front light (not a reflector) visible for 500 feet and a red rear reflector are required. A red rear light may be used in addition to the required reflector (RCW 46.61.780).\n        Shoulder vs. bike lane - Bicyclists may choose to ride on the path, bike lane, shoulder or travel lane as suits their safety needs (RCW 46.61.770).\n        Bicycle helmets - Currently, there is no state law requiring helmet use. However, some cities and counties do require helmets. For specific information along with location for bicycle helmet law please reference to section 21a.\n        Bicycle equipment - Bicycles must be equipped with a white front light visible for 500 feet and a red rear reflector (RCW 46.61.780). A red rear light may be used in addition to the required reflector.\n\"\"\",\n    },\n    {\n        \"title\": \"Bicycle helmet requirement\",\n        \"body\": \"Currently, there is no state law requiring helmet use. However, some cities and counties do require helmet use with bicycles. Here is a list of those locations and when the laws were enacted. For specific information along with location for bicycle helmet law please reference to section 21a.\",\n    },\n    {\n        \"title\": \"Section 21a\",\n        \"body\": \"\"\"helmet rules by location: These are city and county level rules. The following group must wear helmets.\n        Location name | Who is affected | Effective date\n        Aberdeen | All ages | 2001\n        Bainbridge Island | All ages | 2001\n        Bellevue | All ages | 2001\n        Bremerton | All ages | 2000\n        DuPont | All ages | 2008\n        Eatonville | All ages | 1996\n        Fircrest | All ages | 1995\n        Gig Harbor | All ages | 1996\n        Kent | All ages | 1999\n        Lynnwood | All ages | 2004\n        Lakewood | All ages | 1996\n        Milton | All ages | 1997\n        Orting | Under 17 | 1997\n\n     For fines and rules, you will be charged in according with Section 3b of the law.\n     \"\"\",\n    },\n    {\n        \"title\": \"Section 3b\",\n        \"body\": \"\"\"Traffic infraction - A person operating a bicycle upon a roadway or highway shall be subject to the provisions of this chapter relating to traffic infractions.\n        1. Stop for people in crosswalks. Every intersection is a crosswalk - It’s the law. Drivers must stop for pedestrians at intersections, whether it’s an unmarked or marked crosswalk, and bicyclists in crosswalks are considered pedestrians. Also, it is illegal to pass another vehicle stopped for someone at a crosswalk. In Washington, the leading action motorists take that results in them hitting someone is a failure to yield to pedestrians.\n        2. Put the phone down. Hand-held cell phone use and texting is prohibited for all Washington drivers and may result in a $136 fine for first offense, $235 on the second distracted-driving citation.\n        3. Helmets are required for all bicyclists according to the state and municipal laws. If you are in a group required to wear a helmet but do not wear it you can be fined $48. # If you are the parent or legal guardian of a child under 17 and knowingly allow them to ride without a helmet, you can be fined $136.\n\"\"\",\n    },\n]\ndb = pd.DataFrame(documents)\n# comebine title and body\ndb[\"combined\"] = \"Title: \" + db[\"title\"] + \"\\n\" + \"Body: \" + db[\"body\"]\n# generate embedding\nembeddings = co.embed(\n    texts=db.combined.tolist(), model=\"embed-english-v3.0\", input_type=\"search_document\"\n)\ndb[\"embeddings\"] = embeddings.embeddings\n\n```\n\n\n```python\ndb\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>body</th>\n      <th>combined</th>\n      <th>embeddings</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bicycle law</td>\n      <td>\\n        Traffic Infractions and fees - For a...</td>\n      <td>Title: Bicycle law\\nBody: \\n        Traffic In...</td>\n      <td>[-0.024673462, -0.034729004, 0.0418396, 0.0121...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bicycle helmet requirement</td>\n      <td>Currently, there is no state law requiring hel...</td>\n      <td>Title: Bicycle helmet requirement\\nBody: Curre...</td>\n      <td>[-0.019180298, -0.037384033, 0.0027389526, -0....</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Section 21a</td>\n      <td>helmet rules by location: These are city and c...</td>\n      <td>Title: Section 21a\\nBody: helmet rules by loca...</td>\n      <td>[0.031097412, 0.0007619858, -0.023010254, -0.0...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Section 3b</td>\n      <td>Traffic infraction - A person operating a bicy...</td>\n      <td>Title: Section 3b\\nBody: Traffic infraction - ...</td>\n      <td>[0.015602112, -0.016143799, 0.032958984, 0.000...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Tools  \n\nFollowing functions and tools will be used in the subsequent tasks. \n\n\n```python\ndef retrieve_documents(query: str, n=1) -> dict:\n    \"\"\"\n    Function to retrieve documents a given query.\n\n    Steps:\n    1. Embed the query\n    2. Calculate cosine similarity between the query embedding and the embeddings of the documents\n    3. Return the top n documents with the highest similarity scores\n    \"\"\"\n    query_emb = co.embed(\n        texts=[query], model=\"embed-english-v3.0\", input_type=\"search_query\"\n    )\n\n    similarity_scores = cosine_similarity(\n        [query_emb.embeddings[0]], db.embeddings.tolist()\n    )\n    similarity_scores = similarity_scores[0]\n\n    top_indices = similarity_scores.argsort()[::-1][:n]\n    top_matches = db.iloc[top_indices]\n\n    return {\"top_matched_document\": top_matches.combined}\n\n\nfunctions_map = {\n    \"retrieve_documents\": retrieve_documents,\n}\n\ntools = [\n    {\n        \"name\": \"retrieve_documents\",\n        \"description\": \"given a query, retrieve documents from a database to answer user's question\",\n        \"parameter_definitions\": {\n            \"query\": {\"description\": \"query\", \"type\": \"str\", \"required\": True}\n        },\n    }\n]\n\n```\n\n## RAG function \n\n\n\n```python\ndef simple_rag(query, db):\n    \"\"\"\n    Given user's query, retrieve top documents and generate response using documents parameter.\n    \"\"\"\n    top_matched_document = retrieve_documents(query)[\"top_matched_document\"]\n\n    print(\"top_matched_document\", top_matched_document)\n\n    output = co.chat(\n        message=query, model=COHERE_MODEL, documents=[top_matched_document]\n    )\n\n    return output.text\n\n```\n\n## Agentic RAG - cohere_agent()\n\n\n```python\ndef cohere_agent(\n    message: str,\n    preamble: str,\n    tools: list[dict],\n    force_single_step=False,\n    verbose: bool = False,\n    temperature: float = 0.3,\n) -> str:\n    \"\"\"\n    Function to handle multi-step tool use api.\n\n    Args:\n        message (str): The message to send to the Cohere AI model.\n        preamble (str): The preamble or context for the conversation.\n        tools (list of dict): List of tools to use in the conversation.\n        verbose (bool, optional): Whether to print verbose output. Defaults to False.\n\n    Returns:\n        str: The final response from the call.\n    \"\"\"\n\n    counter = 1\n\n    response = co.chat(\n        model=COHERE_MODEL,\n        message=message,\n        preamble=preamble,\n        tools=tools,\n        force_single_step=force_single_step,\n        temperature=temperature,\n    )\n\n    if verbose:\n        print(f\"\\nrunning 0th step.\")\n        print(response.text)\n\n    while response.tool_calls:\n        tool_results = []\n\n        if verbose:\n            print(f\"\\nrunning {counter}th step.\")\n\n        for tool_call in response.tool_calls:\n            output = functions_map[tool_call.name](**tool_call.parameters)\n            outputs = [output]\n            tool_results.append({\"call\": tool_call, \"outputs\": outputs})\n\n            if verbose:\n                print(\n                    f\"= running tool {tool_call.name}, with parameters: \\n{tool_call.parameters}\"\n                )\n                print(f\"== tool results:\")\n                pprint(output)\n\n        response = co.chat(\n            model=COHERE_MODEL,\n            message=\"\",\n            chat_history=response.chat_history,\n            preamble=preamble,\n            tools=tools,\n            force_single_step=force_single_step,\n            tool_results=tool_results,\n            temperature=temperature,\n        )\n\n        if verbose:\n            print(response.text)\n            counter += 1\n\n    return response.text\n\n```\n\n## Question 1 - single-stage retrieval \n\nHere we are asking a question that can be answered easily with single-stage retrieval. Both regular and agentic RAG should be able to answer this question easily. Below is the comparsion of the response. \n\n| Question | Simple Rag | Agentic Rag |  \n|--------------|---------|---------|\n|   Is there a state level law for wearing helmets?  | There is currently no state law requiring the use of helmets when riding a bicycle. However, some cities and counties do require helmet use. | There is currently no state law requiring helmet use. However, some cities and counties do require helmet use with bicycles. | \n\n\n\n\n```python\nquestion1 = \"Is there a state level law for wearing helmets?\"\n```\n\n### Simple RAG \n\n\n```python\noutput = simple_rag(question1, db)\nprint(output)\n```\n\n    top_matched_document 1    Title: Bicycle helmet requirement\\nBody: Curre...\n    Name: combined, dtype: object\n    There is currently no state law requiring the use of helmets when riding a bicycle. However, some cities and counties do require helmet use.\n\n\n### Agentic RAG \n\n\n```python\npreamble = \"\"\"\nYou are an expert assistant that helps users answers question about legal documents and policies.\nUse the provided documents to answer questions about an employee's specific situation.\n\"\"\"\n\noutput = cohere_agent(question1, preamble, tools, verbose=True)\n```\n\n    \n    running 0th step.\n    I will search for 'state level law for wearing helmets' in the documents provided and write an answer based on what I find.\n    \n    running 1th step.\n    = running tool retrieve_documents, with parameters: \n    {'query': 'state level law for wearing helmets'}\n    == tool results:\n    {'top_matched_document': 1    Title: Bicycle helmet requirement\\nBody: Curre...\n    Name: combined, dtype: object}\n    There is currently no state law requiring helmet use. However, some cities and counties do require helmet use with bicycles.\n\n\n## Question 2 - double-stage retrieval \n\nThe second question requires a double-stage retrieval because top matched document references another document. You will see below that the agentic RAG is unable to produce the correct answer initially. But when given proper tools and instructions, it finds the correct answer. \n\n\n| Question | Simple Rag | Agentic Rag |  \n|--------------|---------|---------|\n|I live in orting, do I need to wear a helmet with a bike?|In the state of Washington, there is no law requiring you to wear a helmet when riding a bike. However, some cities and counties do require helmet use, so it is worth checking your local laws.|Yes, you do need to wear a helmet with a bike in Orting if you are under 17.|\n\n\n```python\nquestion2 = \"I live in orting, do I need to wear a helmet with a bike?\"\n```\n\n### Simple RAG \n\n\n```python\noutput = simple_rag(question2, db)\nprint(output)\n```\n\n    top_matched_document 1    Title: Bicycle helmet requirement\\nBody: Curre...\n    Name: combined, dtype: object\n    In the state of Washington, there is no law requiring you to wear a helmet when riding a bike. However, some cities and counties do require helmet use, so it is worth checking your local laws.\n\n\n### Agentic RAG\n\nProduces same quality answer as the simple rag.\n\n\n```python\npreamble = \"\"\"\nYou are an expert assistant that helps users answers question about legal documents and policies.\nUse the provided documents to answer questions about an employee's specific situation.\n\"\"\"\n\noutput = cohere_agent(question2, preamble, tools, verbose=True)\n```\n\n    \n    running 0th step.\n    I will search for 'helmet with a bike' and then write an answer.\n    \n    running 1th step.\n    = running tool retrieve_documents, with parameters: \n    {'query': 'helmet with a bike'}\n    == tool results:\n    {'top_matched_document': 1    Title: Bicycle helmet requirement\\nBody: Curre...\n    Name: combined, dtype: object}\n    There is no state law requiring helmet use, however, some cities and counties do require helmet use with bicycles. I cannot find any information about Orting specifically, but you should check with your local authority.\n\n\n### Agentic RAG - New Tools \n\nIn order for the model to retrieve correct documents, we do two things: \n1. New reference_extractor() function is added. This function finds the references to other documents when given query and documents. \n2. We update the instruction that directs the agent to keep retrieving relevant documents. \n\n\n```python\ndef reference_extractor(query: str, documents: list[str]) -> str:\n    \"\"\"\n    Given a query and document, find references to other documents.\n    \"\"\"\n    prompt = f\"\"\"\n    # instruction\n    Does the reference document mention any other documents? If so, list them.\n    If not, return empty string.\n\n    # user query\n    {query}\n\n    # retrieved documents\n    {documents}\n    \"\"\"\n\n    return co.chat(message=prompt, model=COHERE_MODEL, preamble=None).text\n\n\ndef retrieve_documents(query: str, n=1) -> dict:\n    \"\"\"\n    Function to retrieve most relevant documents a given query.\n    It also returns other references mentioned in the top matched documents.\n    \"\"\"\n    query_emb = co.embed(\n        texts=[query], model=\"embed-english-v3.0\", input_type=\"search_query\"\n    )\n\n    similarity_scores = cosine_similarity(\n        [query_emb.embeddings[0]], db.embeddings.tolist()\n    )\n    similarity_scores = similarity_scores[0]\n\n    top_indices = similarity_scores.argsort()[::-1][:n]\n    top_matches = db.iloc[top_indices]\n    other_references = reference_extractor(query, top_matches.combined.tolist())\n\n    return {\n        \"top_matched_document\": top_matches.combined,\n        \"other_references_to_query\": other_references,\n    }\n\n\nfunctions_map = {\n    \"retrieve_documents\": retrieve_documents,\n}\n\ntools = [\n    {\n        \"name\": \"retrieve_documents\",\n        \"description\": \"given a query, retrieve documents from a database to answer user's question. It also finds references to other documents that should be leveraged to retrieve more documents\",\n        \"parameter_definitions\": {\n            \"query\": {\n                \"description\": \"user's question or question or name of other document sections or references.\",\n                \"type\": \"str\",\n                \"required\": True,\n            }\n        },\n    }\n]\n\n```\n\n\n```python\npreamble2 = \"\"\"# Instruction\nYou are an expert assistant that helps users answers question about legal documents and policies.\n\nPlease follow these steps:\n1. Using user's query, use `retrieve_documents` tool to retrieve the most relevant document from the database.\n2. If you see `other_references_to_query` in the tool result, search the mentioned referenced using `retrieve_documents(<other reference>)` tool to retrieve more documents.\n3. Keep trying until you find the answer.\n4. Answer with yes or no as much as you can to answer the question directly.\n\"\"\"\n\noutput = cohere_agent(question2, preamble2, tools, verbose=True)\n```\n\n    \n    running 0th step.\n    I will search for 'Orting' and 'bike helmet' to find the relevant information.\n    \n    running 1th step.\n    = running tool retrieve_documents, with parameters: \n    {'query': 'Orting bike helmet'}\n    == tool results:\n    {'other_references_to_query': 'Section 21a, Section 3b',\n     'top_matched_document': 0    Title: Bicycle law\\nBody: \\n        Riding on ...\n    Name: combined, dtype: object}\n    I have found that there is no state law requiring helmet use, but some cities and counties do require helmets. I will now search for 'Section 21a' to find out if Orting is one of these cities or counties.\n    \n    running 2th step.\n    = running tool retrieve_documents, with parameters: \n    {'query': 'Section 21a'}\n    == tool results:\n    {'other_references_to_query': '- Section 3b',\n     'top_matched_document': 2    Title: Section 21a\\nBody: helmet rules by loca...\n    Name: combined, dtype: object}\n    Yes, you do need to wear a helmet when riding a bike in Orting if you are under 17.",
    "html": "",
    "htmlmode": false,
    "fullscreen": false,
    "hidden": false,
    "revision": 5,
    "_id": "66633e4c732072002e519c71",
    "__v": 0,
    "createdAt": "2024-06-07T17:07:24.892Z",
    "lastUpdatedHash": "a5e3457f41837006d242ab830754b01888280763",
    "project": "62cde2919aafea009aefb289",
    "updatedAt": "2024-07-11T01:20:30.511Z",
    "user": "5af39863989da435b05d284e"
  },
  "meta": {
    "user": {
      "allowedProjects": ["cohere-ai", "cohere-enterprise"],
      "apiKey": "",
      "email": "andrewjiang@hey.com",
      "name": "Andrew Jiang",
      "version": 1,
      "Name": "Andrew Jiang",
      "Email": "andrewjiang@hey.com",
      "APIKey": "",
      "AllowedProjects": ["cohere-ai", "cohere-enterprise"]
    },
    "baseUrl": "/",
    "hidden": false,
    "title": "Agentic Multi-Stage RAG with Cohere Tools API",
    "metaTitle": "Agentic Multi-Stage RAG with Cohere Tools API",
    "keywords": "",
    "description": "",
    "image": [],
    "slug": "agentic-multi-stage-rag",
    "type": "custompage",
    "full": false
  }
}
